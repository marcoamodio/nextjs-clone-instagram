{"ast":null,"code":"var _jsxFileName = \"/Users/marcoamodio/Desktop/nextjs-clone-instagram/components/add_comment.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\nexport default function AddComment() {\n  const changeRef = useRef(null);\n  const {\n    0: textAreaSize,\n    1: setAreaSize\n  } = useState(18);\n  const {\n    0: isTyped,\n    1: setTyped\n  } = useState(false);\n  return __jsx(\"form\", {\n    method: \"POST\",\n    className: \"add-comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"textarea\", {\n    className: \"add-comment-input\",\n    style: {\n      height: textAreaSize\n    },\n    placeholder: \"Add Comment...\",\n    \"aria-label\": \"Add Comment...\",\n    ref: changeRef,\n    onChange: e => {\n      setAreaSize(changeRef.current.scrollHeight);\n      setTyped(e.target.value.length > 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: \"add-comment-button text-14-light text-blue\",\n    style: {\n      opacity: isTyped ? 1 : 0.3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Share\"));\n}","map":{"version":3,"sources":["/Users/marcoamodio/Desktop/nextjs-clone-instagram/components/add_comment.js"],"names":["React","useRef","useEffect","useState","AddComment","changeRef","textAreaSize","setAreaSize","isTyped","setTyped","height","e","current","scrollHeight","target","value","length","opacity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAsBN,QAAQ,CAAC,KAAD,CAApC;AAEA,SACE;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAC,uBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAEJ;AAAV,KAFT;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,kBAAW,gBAJb;AAKE,IAAA,GAAG,EAAED,SALP;AAME,IAAA,QAAQ,EAAGM,CAAD,IAAO;AACfJ,MAAAA,WAAW,CAACF,SAAS,CAACO,OAAV,CAAkBC,YAAnB,CAAX;AACAJ,MAAAA,QAAQ,CAACE,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAzB,CAAR;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAET,OAAO,GAAG,CAAH,GAAO;AAAzB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,CADF;AAqBD","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nexport default function AddComment() {\n  const changeRef = useRef(null);\n  const [textAreaSize, setAreaSize] = useState(18);\n  const [isTyped, setTyped] = useState(false);\n\n  return (\n    <form method=\"POST\" className=\"add-comment-container\">\n      <textarea\n        className=\"add-comment-input\"\n        style={{ height: textAreaSize }}\n        placeholder=\"Add Comment...\"\n        aria-label=\"Add Comment...\"\n        ref={changeRef}\n        onChange={(e) => {\n          setAreaSize(changeRef.current.scrollHeight);\n          setTyped(e.target.value.length > 0);\n        }}\n      ></textarea>\n      <button\n        className=\"add-comment-button text-14-light text-blue\"\n        style={{ opacity: isTyped ? 1 : 0.3 }}\n      >\n        Share\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}