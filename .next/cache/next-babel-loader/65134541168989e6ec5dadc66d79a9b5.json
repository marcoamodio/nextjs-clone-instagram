{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useRecoilState } from \"recoil\";\nimport { modalState } from \"../atoms/modal_state\";\n\nvar ModalStateHook = function ModalStateHook() {\n  _s();\n\n  var _useRecoilState = useRecoilState(modalState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      modal_state = _useRecoilState2[0],\n      setModalState = _useRecoilState2[1];\n\n  var showModal = modal_state.showModal,\n      data = modal_state.data;\n  var modalData = data;\n\n  var setModal = function setModal(status, newData) {\n    return setModalState({\n      showModal: status,\n      data: newData\n    });\n  };\n\n  return {\n    showModal: showModal,\n    modalData: modalData,\n    setModal: setModal\n  };\n};\n\n_s(ModalStateHook, \"61f0xJc8XPNhyF698Xah1DQqjx0=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = ModalStateHook;\nexport default ModalStateHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalStateHook\");","map":{"version":3,"sources":["/Users/marcoamodio/Desktop/nextjs-clone-instagram/hooks/modal_hook.js"],"names":["useRecoilState","modalState","ModalStateHook","modal_state","setModalState","showModal","data","modalData","setModal","status","newData"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B,wBAAqCF,cAAc,CAACC,UAAD,CAAnD;AAAA;AAAA,MAAOE,WAAP;AAAA,MAAoBC,aAApB;;AAEA,MAAQC,SAAR,GAA4BF,WAA5B,CAAQE,SAAR;AAAA,MAAmBC,IAAnB,GAA4BH,WAA5B,CAAmBG,IAAnB;AACA,MAAMC,SAAS,GAAGD,IAAlB;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,OAAT;AAAA,WACfN,aAAa,CAAC;AAAEC,MAAAA,SAAS,EAAEI,MAAb;AAAqBH,MAAAA,IAAI,EAAEI;AAA3B,KAAD,CADE;AAAA,GAAjB;;AAGA,SAAO;AAAEL,IAAAA,SAAS,EAATA,SAAF;AAAaE,IAAAA,SAAS,EAATA,SAAb;AAAwBC,IAAAA,QAAQ,EAARA;AAAxB,GAAP;AACD,CATD;;GAAMN,c;UACiCF,c;;;KADjCE,c;AAWN,eAAeA,cAAf","sourcesContent":["import { useRecoilState } from \"recoil\";\nimport { modalState } from \"../atoms/modal_state\";\n\nconst ModalStateHook = () => {\n  const [modal_state, setModalState] = useRecoilState(modalState);\n\n  const { showModal, data } = modal_state;\n  const modalData = data;\n  const setModal = (status, newData) =>\n    setModalState({ showModal: status, data: newData });\n\n  return { showModal, modalData, setModal };\n};\n\nexport default ModalStateHook;\n"]},"metadata":{},"sourceType":"module"}